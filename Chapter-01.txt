Today's Topics
===================================
-> Overview of Selenium
-> Component of Selenium
-> Selenium Environment Setup
-> Webderiver Iterface, and Methods
-> ScreenShot Capture
-> Waits 
-> Application (program)


Overview of Selenium
=========================
-Selenium is open source (free) automated testing suite to automate the web application
-There are following components of selenium


1. WebDriver	:  is interface which provides methods to interact with app page/app
2. IDE		:  is plugin for record and play 
3. RC/ Grid     : (Grid -> configuration management tool) to run multiple browser for same application at the same time 

WebDriver:
		3.x
		3.14...

Environment Setup of Selenium
======================================
Step 1: Install JDK 
	$java -version 

Step 2: Install Eclipse (editor)
	Edition:
		Eclipse Oxygen 
			
Step 3: Download the Selenium Jars (API - Application programing interface)
	https://www.seleniumhq.org/download/

Step 4: Chrome driver or other browser driver 
	http://chromedriver.chromium.org/downloads
	
	
Project's Configuration
=====================
AutomationProject
	-JRE : java runtime environment
	-src : source code 


We need add reference of selenium jar files in a project

	

-> Selenium Environment Setup
-> Webderiver Interface, and Methods
===========================================
There are following inbuilt interface, class, and methods 

WebDriver 		: is inbuilt interface
ChromeDriver		: is inbuilt class
FirefoxDriver		: is input class 

get(url)		: open the given url/application in browser
getTitle()		: return web page title 
getCurrentURL()		: return open url 
manage()		: maximize(), remove cookies,  implicit wait 
	timeouts()		: function with set waiting time 
findElement()		: find web element(html element) and return reference of one element	
findElements()		: find web elements(multiple html element) and return reference of all 				matching  element	

----locators-----
		<input type="text"  id="fname" name="fname" class="txt" />
By.id()		: By.id("fname")						
By.name()	
By.tagName()	: By.tagName("input")
By.className()	: By.className("txt")

		<a href="abc.com/a.html" > Home Page </a>
	
By.linkText("Home Page")  		: exact path 	
By.partialLinkText("Home")		: contains 		

		
		<html>

		<body>
	
			<div>
			</div>
			<div>
				<div>

				</div>

				<div id="login">
					<p>
						Name : <input type="text" />
						Email id: <input type="text" />
					
					</p>
				
				<div>

			</div>
		</body>
		</html>
	
By.xpath()
		//body/div[1]/div[1]/p/input[0]
		//body/div[1]/div[1]/p/input[1]

		//@id['login']/p/input[0]

		There are following types of xpath:
			-full path / absolute xpath 
				//body/div[1]/div[1]/p/input[0]
				//body/div[1]/div[1]/p/input[1]
			-Relative xpath 
				//@id['login']/p/input[0]
			
By.cssSelector()
			<html>

		<body>
	
			<div>
			</div>
			<div class="box">
				<div>

				</div>

				<div class="login" >
					<p>
						Name : <input type="text" class="name" />
						Email id: <input type="text" class="email" />
					
					</p>
				
				<div>

			</div>
		</body>
		</html>

		".box .login .name"
		".box .login .email"
	
		--events/actions----						
clear()		: remove the present value from text box 
		
sendKeys()	: enter/type the given value 
Click()		: mouse click or enter 


-> ScreenShot Capture
=========================================================
TakeScreenShot		: is inbuilt class which provides method to capture the screen 
			
-> Waits 
===========================================================
There are following of wait in webdriver:
	-implicit wait   : wait for every action 
				
			driver.manage.timeouts.implicitWaits(10,TimeUnit.Seconds);
			
	-explicit wait   : wait for given statement 
			Thread.sleep(5000)		//for 5 seconds 
			
		
	-fluent wait 

			Wait<WebDriver> w = new FluentWait<WebDriver>(driver)
				.withTimeOut(60,TimeUnit.Seconds)
				.pollingEvery(10,TimeUnit.Secords)
-> Application (program)










	
		
		